load "medit"
// Mesh
mesh Th = square(50,50);

// Fespace
fespace Uh(Th, P1b);
Uh u1, u2, f1, f2;
Uh u1old, u2old;
Uh v1, v2;
Uh psi, phi;
fespace Ph(Th, P1);
Ph p, q;

// Time
real dt = 0.005;
real T = 0.5;

// Problem
real epsilon = 1e-10;
real muy = 1;
f1 = 0;
f2 = 0;
u1old = 0;
u2old = 0;
int i = 1;
for (i = 0; i*dt <= T; i++)
{
    solve stokes([u1, u2, p], [v1, v2, q])
    = int2d(Th)(u1*v1 + u2*v2)                                                                      // u*v
    + int2d(Th)(dt*muy*(dx(u1)*dx(v1) + dy(u1)*dy(v1) + dx(u2)*dx(v2) + dy(u2)*dy(v2)))             // dt*muy*grad(u)*grad(v)
    - int2d(Th)(dt*p*(dx(v1) + dy(v2)))                                                             // dt*p*div(v)
    - int2d(Th)(u1old*v1 + u2old*v2)                                                                // u_old*v
    - int2d(Th)(dt*(f1*v1 + f2*v2))                                                                 // dt*f*v
    + int2d(Th)(q*(dx(u1) + dy(u2)))                                                                // q*div(v)
    - int2d(Th)(epsilon*p*q)
    + on(1, 2, 4, u1=0, u2=0)
    + on(3, u1=1, u2=0);

    // streamline
    solve streamlines (psi, phi)
    = int2d(Th)(dx(psi) * dx(phi) + dy(psi) * dy(phi))
    + int2d(Th)(-phi * (dy(u1) - dx(u2)))
    + on(1, 2, 3, 4, psi=0);
    // plot(psi);

    u1old = u1;
    u2old = u2;

//	savesol("Th." + i + ".sol", Th, psi);
//	savemesh(Th, "Th." + i + ".mesh");
}