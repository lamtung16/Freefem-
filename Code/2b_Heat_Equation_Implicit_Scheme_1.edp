load "medit"
// build mesh
mesh Th = square(50,50);

// P1 conforming triangular Finite Element Method
fespace Vh(Th, P1);
Vh u, v, uold;
Vh u0, f;

// Time
real T = 1;
real dt = 0.1;

// solve
u0 = sin(pi*x)*sin(pi*y);
uold = u0;
for (int i=0; i*dt < T; i++)
{
	f = (1 + 2*pi*pi)*exp(i*dt+dt)*sin(pi*x)*sin(pi*y);
	solve Heat(u, v) = 
		int2d(Th)(u*v + dt*(dx(u)*dx(v) + dy(u)*dy(v)))
		- int2d(Th)(v*(uold + f*dt))
		+ on(1, 2, 3, 4, u=0);
	uold = u;
//	savesol("Th." + i + ".sol", Th, u);
//	savemesh(Th, "Th." + i + ".mesh");
}

// error
func ue = sin(pi*x)*sin(pi*y)*exp(T);
cout <<"L2error: " << sqrt(int2d(Th)((ue - u)^2))  <<endl;