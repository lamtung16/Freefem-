load "medit"
// build mesh
mesh Th = square(50,50);

// P1 conforming triangular Finite Element Method
fespace Vh(Th, P1);
Vh u, v, u0, u1;
Vh uold1, uold2;

// Time
real T = 1;
real dt = 0.1;

// solve
u0 = 0;
u1 = u0 + dt*pi*sqrt(2)*sin(pi*x)*sin(pi*y);
uold2 = u0;
uold1 = u1;
for (int i = 0; i*dt < T; i++)
{
	Vh f = (1+2*pi*pi)*exp((i+1)*dt)*sin(pi*x)*sin(pi*y);
	solve PTTN(u, v) = 
		int2d(Th)(3*u*v + 2*dt*(dx(u)*dx(v) + dy(u)*dy(v)))
		- int2d(Th)(2*dt*f*v + 4*uold1*v - uold2*v)
		+ on(1, 2, 3, 4, u=0);
	uold2 = uold1;
	uold1 = u;
//	savesol("Th." + i + ".sol", Th, u);
//	savemesh(Th, "Th." + i + ".mesh");
}

// error
func uexact = sin(pi*x)*sin(pi*y)*exp(T);
cout <<"L2error"+":" << sqrt(int2d(Th)((uexact - u)^2))  <<endl;